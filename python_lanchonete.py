# -*- coding: utf-8 -*-
"""Python_Lanchonete.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YQVxB09TsILEzvEd22H5KJ5MTA8msRhI

#**Lanchonete Soul Burguer**

##Autores: Ney Oliveira, Alyne Cristina, José Henrique, Renata Nunes, Sherida Alves
"""

"""Requisitos :

Criar um programa que simule um software de acordo com o segmento que foi definido para a sua equipe. O software deverá seguir as especificações abaixo: 
*   Ao executar o algoritmo, deverá aparecer duas opções:
A - Para acessar o programa ou F - Para finalizar o programa. 
*   Caso o usuário digite A, deverá ser direcionado para outra parte do programa que tenha no mínimo 4  funcionalidades que podem ser : Adicionar produto , adicionar serviço , finalizar a compra , etc .
*   A cada produto ou serviço selecionado, deverá aumentar o valor a ser pago na conta , igualmente num caixa de supermercado convencional . considerando que o cliente pode levar mais de uma quantidade do mesmo produto/serviço (ex : 2 caixas de leite , 2 trocas de pneus ).
*   Ao fechar/concluir o processo de seleção de produtos/serviços deve exibir ao cliente o total de valor a ser pago e pedir para que o cliente selecione a forma de pagamento , obrigatoriamente deve existir a forma de pagamento em dinheiro que gere troco , caso o troco seja gerado deve-se informar o valor do troco e quantas cedulas vão ser dadas para o cliente, sempre considere a menor quantidade de cédulas possíveis.
* As cédulas disponíveis são : 50 , 20 , 10 , 5 ,2 e 1 real .Sempre utilizar o número mínimo de cédulas  possível Pode descartar valores de centavos
* No processo de finalização da compra deve existir uma opção para o cliente desistir da compra , em caso positivo deve ser perguntado a confirmação da desistência (informando os produtos/serviços que o cliente está desistindo)
* Ao finalizar a compra deve-se voltar a tela inicial Acessar programa / finalizar programa . Quando finalizar deve-se exibir uma mensagem agradecendo a visita, informando o que foi comprado e o valor gasto no estabelecimento.

Cada requisito atendido terá uma pontuação que será somada no caso da equipe se apresentar a nota de apresentação , caso a equipe não apresente será validado apenas o atendimento dos requisitos acima.

"""

import time
print('Bem vindo a Soul Burguer! \n')
print('{:=^40}'.format('Menu Principal'))

#variavel para armazenar todos os comentários dos clientes
observacoes = []

#variável para receber valor total da compra
t = 0

#carrinho de compras para adicionar os pedidos feitos
carrinho = []

while True:
  a = input('Acessar o programa digite A, para sair digite F: \n').lower()
 
  if a == 'a':   

    while True:  
      print('{:=^40}'.format('Lanches'))
      print('01 - Hamburger de frango: R$ 30 \n'
            '02 - Hamburger de calabresa: R$ 31 \n'
            '03 - Hamburger de veggie: R$ 32 \n'
            '04 - Hamburger de carne: R$ 33 \n'
            '05 - Sem hamburguer \n')
      while True:
        h = input("Digite o numero do hamburguer: ")
        if h == "01" or h == "1" or h == "02" or h == "2" or h == "03" or h == "3" or h == "04" or h == "4" or h=="5" or h=="05":
          break
        else:
          print("Produto inexistente. Digite um valor válido. \n")
      if h != "5" and h != "05":
        while True:
          q = input("Digite a quantidade: \n")
          
          #teste se quantidade é númerico e maior que zero
          if q.isnumeric():
            if int(q) > 0:
              q = int(q)
              break
          else:
            print("Valor inválido! Digite um inteiro válido para a quantidade.")

        #lista para recuperar os preços unitários dos hamburgers 
        lst_h = [30 ,31, 32, 33]

        #preço do pedido: valor unitário * quantidade
        preco = 0
        if h == "01" or h == "1":
          #preço do pedido
          preco = lst_h[0] * q

          #inserindo pedido no carrinho
          carrinho.append(("Hamburger de frango",q))
        elif h == "02" or h == "2":
          #preço do carrinho
          preco = lst_h[1] * q

          #inserindo pedido no carrinho
          carrinho.append(("Hamburger de calabresa",q))
        elif h == "03" or h == "3":
          #preço do carrinho
          preco = lst_h[2] * q

          #inserindo pedido no carrinho
          carrinho.append(("Hamburger de veggie",q))
        elif h == "04" or h == "4":
          #preço do carrinho
          preco = lst_h[3] * q

          #inserindo pedido no carrinho
          carrinho.append(("Hamburger de carne",q))
        
        #adicionando o preço do pedido ao valor total da compra
        t += preco
      
      #adicionar bebida
      print('{:=^40}'.format('Bebida'))
      print('01 - Refrigerante: R$ 5\n'
            '02 - Suco natural: R$ 8\n'
            '03 - Água: R$ 3\n'
            '04 - Sem bebida\n')
      while True:
        b = input("Digite o numero da bebida: ")
        if b == "01" or b == "1" or b == "02" or b == "2" or b == "03" or b == "3" or b == "04" or b == "4":
          break
        else:
          print("Produto inexistente. Digite um valor válido.\n")

      if b != "4" and b != "04":
        while True:
          q = input("Digite a quantidade: \n")
          
          #teste se quantidade é númerico e maior que zero
          if q.isnumeric():
            if int(q) > 0:
              q = int(q)
              break
          else:
            print("Valor inválido! Digite um inteiro válido para a quantidade.")
        #lista para recuperar os preços unitários das bebidas 
        lst_b = [5 ,8, 3]

        #preço do pedido: valor unitário * quantidade
        preco = 0
        if b == "01" or b == "1":
          #preço do pedido
          preco = lst_b[0] * q

          #inserindo pedido no carrinho
          carrinho.append(("Refrigerante",q))
        elif b == "02" or b == "2":
          #preço do carrinho
          preco = lst_b[1] * q

          #inserindo pedido no carrinho
          carrinho.append(("Suco natural",q))
        elif b == "03" or b == "3":
          #preço do carrinho
          preco = lst_b[2] * q

          #inserindo pedido no carrinho
          carrinho.append(("Água",q))
        
        #adicionando o preço do pedido ao valor total da compra
        t += preco

      while True:
        p = input("Deseja realizar mais algum pedido? S para sim, N para não: ").lower()
        if p == 's' or p == 'n':
          break
        else:
          print("Comando invalido. Digite S para adicionar ou N para não adicionar: \n")
      if p == 's':
        continue
      else:
        break
    print('{:=^40}'.format('Vallet'))
    while True:
      s = input('O valor do vallet é R$10. Adicionar serviço de vallet? S para sim e N para não: ').lower()
      if s == "s":
        #Adicionando o valor vallet ao valor total da compra
        t += 10

        #Adicionando o vallet no carrinho
        carrinho.append(("Vallet",1))
        
        break
      elif s == "n":
        break
      
      else:
        print("Comando invalido. Digite S para adicionar ou N para não adicionar: \n")

    
    print(f"O valor total é de R${t}")

    #Concluir compra: s -> pagamento | n -> opçao de desistir
    if t>0:
      while True:
        if t>0:
          concluir_compra = input("Gostaria de prosseguir para o pagamento? S para sim e N para não: ").lower()
        else:
          break

        if concluir_compra == "n":         
          while True:
            desistir = input("Gostaria de desistir da compra? \n S para sim e N para não: ").lower()
            if desistir == "s":

              #mostrar produtos/serviços excluidos
              for prod in carrinho:
                print(f"Excluindo {prod}")
              
              #resetar carrinho e valor total da compra após desistência
              t = 0
              carrinho = []
              break
            
            elif desistir == "n":
              break
            
            else:
              print("Comando invalido. Digite S para desistir ou N para continuar: \n")
       
        elif concluir_compra == 's':
          if t > 0:
            while True:
              print('{:=^40}'.format('Pagamento'))
              print(f"O valor total é de R${t}")
              forma_pagamento = input("Escolha a forma de pagamento:\n 1 - Dinheiro: \n 2 - Crédito: \n 3 - Débito: \n ")
              
              if(forma_pagamento == "2" or forma_pagamento == "3"):
                print("Inserir cartão...")
                time.sleep(5)
                print("Digitando senha...")
                time.sleep(4)
                print("Validando compra...")
                time.sleep(3)
                print("Compra concluída")
                input("Pressione qualquer tecla para continuar")
                break
              elif forma_pagamento == "1":
                while True:
                  print(f"O valor total é de R${t}")
                  valor_pago = int(input("Valor pago: "))

                  if valor_pago < t:
                    print(f"Valor insuficiente. O valor total foi de {t}. Insira um pagamento adequado")
                  
                  else:
                    break
                
                troco = valor_pago - t

                nota50 = troco // 50
                nota20 = (troco - (nota50 * 50)) // 20
                nota10 = (troco - (nota50 * 50) - (nota20 * 20)) // 10
                nota5 = (troco - (nota50 * 50) - (nota20 * 20) - (nota10 * 10)) // 5
                nota2 = (troco - (nota50 * 50) - (nota20 * 20) - (nota10 * 10) - (nota5 * 5)) // 2
                nota1 = (troco - (nota50 * 50) - (nota20 * 20) - (nota10 * 10) - (nota5 * 5) - (nota2 * 2))

                print(f"O troco é R${troco}")

                print(f"{nota50} nota(s) de R$50 \n{nota20} nota(s) de R$20 \n"
                f"{nota10} nota(s) de R$10 \n{nota5} nota(s) de R$5 \n{nota2} nota(s) de R$2 \n{nota1} nota(s) de R$1")
                break
              
              else:
                print("Comando invalido. Digite \n 1- Dinheiro\n 2- Crédito\n 3- Débito: \n")
            break
        else:
          print("Comando invalido. Digite S (sim) para concluir ou N (não) para voltar: \n")    
      print('{:=^40}'.format('Observação do Cliente'))

    if t > 0:
      observacoes.append(input("Alguma observação? ex: tirar cebola, molho à parte, etc: "))


  elif a == 'f':
    break
  else:
    print("Comando invalido. Digite A para acessar ou F para sair: \n")
print('{:=^40}'.format('Resumo do pedido'))
print("Obrigado por escolher a Soul Burguer! Volte sempre!")

for pedido in carrinho:
  print(f"{pedido[0]} com {pedido[1]} unidade(s) vendidas")

print(f"O valor total foi R${t}: ")

l='''
░██████╗░█████╗░██╗░░░██╗██╗░░░░░  ██████╗░██╗░░░██╗██████╗░░██████╗░██╗░░░██╗███████╗██████╗░
██╔════╝██╔══██╗██║░░░██║██║░░░░░  ██╔══██╗██║░░░██║██╔══██╗██╔════╝░██║░░░██║██╔════╝██╔══██╗
╚█████╗░██║░░██║██║░░░██║██║░░░░░  ██████╦╝██║░░░██║██████╔╝██║░░██╗░██║░░░██║█████╗░░██████╔╝
░╚═══██╗██║░░██║██║░░░██║██║░░░░░  ██╔══██╗██║░░░██║██╔══██╗██║░░╚██╗██║░░░██║██╔══╝░░██╔══██╗
██████╔╝╚█████╔╝╚██████╔╝███████╗  ██████╦╝╚██████╔╝██║░░██║╚██████╔╝╚██████╔╝███████╗██║░░██║
╚═════╝░░╚════╝░░╚═════╝░╚══════╝  ╚═════╝░░╚═════╝░╚═╝░░╚═╝░╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝
'''
print(l)